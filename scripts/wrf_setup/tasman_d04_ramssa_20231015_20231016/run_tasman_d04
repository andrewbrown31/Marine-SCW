#!/bin/bash

#Set PBS resources
WALLTIME="48:00:00"
MEM="384GB"
NCPU=144

#Geogrid settings (0=don't run, 1=Run)
RUN_GEOG=0

#SUFFIX for run name (e.g., if changing some settings, then change the prefix to keep the first run)
SUFFIX="_ramssa"

#Set the start and end date for the run and save as variables
START_YYYY=2023
START_MM=10
START_DD=15
START_HH=03
END_YYYY=2023
END_MM=10
END_DD=16
END_HH=00
START=$START_YYYY"-"$START_MM"-"$START_DD"_"$START_HH":00:00"
END=$END_YYYY"-"$END_MM"-"$END_DD"_"$END_HH":00:00"

#Grab the namelist, and place it in /WPS as namelist.wps
cd /g/data/eg3/ab4502/WRF/WPS
cp namelist.wps_tasmand04_ramssa namelist.wps
sed -i "s/START/$START/g" namelist.wps
sed -i "s/END/$END/g" namelist.wps

#Run geogrid
if [ $RUN_GEOG -eq 1 ]
then
 echo RUNNING GEOGRID.EXE...
 ./geogrid.exe
fi

#Change the era5 download script, for the times and vic domain, and execute (if it hasn't already been downloaded)
NORT=-20
WEST=130
SOUT=-50
EAST=170
cd era5_data
cp dl_era5.sh dl_era5_temp.sh
sed -i "s/START/${START_YYYY}${START_MM}${START_DD}/g" dl_era5_temp.sh
sed -i "s/END/"${END_YYYY}${END_MM}${END_DD}"/g" dl_era5_temp.sh
sed -i "s/NORT/$NORT/g" dl_era5_temp.sh
sed -i "s/WEST/$WEST/g" dl_era5_temp.sh
sed -i "s/SOUT/$SOUT/g" dl_era5_temp.sh
sed -i "s/EAST/$EAST/g" dl_era5_temp.sh
if [ ! -f ${START_YYYY}/ERA5-${START_YYYY}${START_MM}${START_DD}*-pl.grib ]; then
    sh dl_era5_temp.sh
fi

#Link downloaded ERA5 grib files to /WPS
cd ..
./link_grib.csh "era5_data/"${START_YYYY}"/ERA5-"${START_YYYY}${START_MM}${START_DD}"*.grib"

#Link Vtable
ln -s -f ungrib/Variable_Tables/Vtable.ERA-interim_noSST.pl Vtable

#Run ungrib
./ungrib.exe

#Download RAMSSA files and create intermediate files. Copy intermediate files for each hour of the day, to match ERA5 input
cd /g/data/eg3/ab4502/WRF/WPS/ramssa_data/
#rm *.nc*
#rm RAMSSA*
wget https://thredds.aodn.org.au/thredds/fileServer/IMOS/SRS/SST/ghrsst/L4/RAMSSA/2023/20231015120000-ABOM-L4_GHRSST-SSTfnd-RAMSSA_09km-AUS-v02.0-fv01.0.nc
wget https://thredds.aodn.org.au/thredds/fileServer/IMOS/SRS/SST/ghrsst/L4/RAMSSA/2023/20231016120000-ABOM-L4_GHRSST-SSTfnd-RAMSSA_09km-AUS-v02.0-fv01.0.nc
python /home/548/ab4502/working/Marine-SCW/scripts/wrf_setup/tasman_d04_ramssa_20231015_20231016/ramssa_intermediate.py
for i in $(seq -f "%02g" 0 23)
do
 cp RAMSSA:2023-10-15_12 "RAMSSA:2023-10-15_"${i}
 cp RAMSSA:2023-10-16_12 "RAMSSA:2023-10-16_"${i}
done


#Remove previous met files. Then, run metgrid
cd ..
ln -s -f ramssa_data/RAMSSA* .
rm /g/data/eg3/ab4502/WRF/WPS/met_em.d*
./metgrid.exe

#Grab namelist, and place it in /WRF/test/em_real/ as namelist.input
cd /g/data/eg3/ab4502/WRF/WRF/test/em_real
cp namelist.input_tasmand04 namelist.input
sed -i "s/START_YYYY/$START_YYYY/g" namelist.input
sed -i "s/START_MM/$START_MM/g" namelist.input
sed -i "s/START_DD/$START_DD/g" namelist.input
sed -i "s/START_HH/$START_HH/g" namelist.input
sed -i "s/END_YYYY/$END_YYYY/g" namelist.input
sed -i "s/END_MM/$END_MM/g" namelist.input
sed -i "s/END_DD/$END_DD/g" namelist.input
sed -i "s/END_HH/$END_HH/g" namelist.input

#Make an output dir in /g/data/eg3/ab4502/WRF_simulations/ for this run. Edit namelist input to use this dir for output
#https://forum.mmm.ucar.edu/phpBB3/viewtopic.php?t=8679
OUTDIR="/g/data/w40/ab4502/WRF_simulations/tasman_d04_${START_YYYY}${START_MM}${START_DD}_${END_YYYY}${END_MM}${END_DD}${SUFFIX}"
mkdir $OUTDIR
sed -i "s+OUTDIR+$OUTDIR+g" namelist.input

#Link /WPS/met_em* to /WRF/test/em_real/ - but first remove previously linked files
rm met_em.d0*
ln -sf /g/data/eg3/ab4502/WRF/WPS/met_em.d01* .
ln -sf /g/data/eg3/ab4502/WRF/WPS/met_em.d02* .
ln -sf /g/data/eg3/ab4502/WRF/WPS/met_em.d03* .
ln -sf /g/data/eg3/ab4502/WRF/WPS/met_em.d04* .

#Run real_exe
WRF_ROOT=/g/data/eg3/ab4502/WRF
source ${WRF_ROOT}/build.env
ulimit -s unlimited
#mpirun -np 1 ./real.exe
qsub run_real

#Submit run_mpi
cp run_mpi run_mpi_temp
sed -i "s/WALLTIME/$WALLTIME/g" run_mpi_temp
sed -i "s/MEM/$MEM/g" run_mpi_temp
sed -i "s/NCPU/$NCPU/g" run_mpi_temp
#qsub run_mpi_temp

echo "WHEN THIS SCRIPT IS DONE, AND RUN_REAL.EXE (SUBMITTED TO QUEUE) IS COMPLETE, THEN DO: cd /g/data/eg3/ab4502/WRF/WRF/test/em_real; qsub run_mpi_temp"
